---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress
  namespace: default
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-ingress
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
apiVersion: v1
kind: ConfigMap
data:
  traefik.toml: |
    # traefik.toml
    logLevel = "DEBUG"
    defaultEntryPoints = ["http", "https"]
    [entryPoints]
      [entryPoints.http]
      address = ":80"
      compress = true
      [entryPoints.https]
      address = ":443"
        [entryPoints.https.tls]
          [[entryPoints.https.tls.certificates]]
            certFile = "/ssl/traefik-dashboard.local.crt"
            keyFile = "/ssl/traefik-dashboard.local.key"
      compress = true
      [entryPoints.traefik]
      address = ":8080"
    [kubernetes]
    namespaces = ["default", "kube-system"]
    [traefikLog]
      format = "json"
    [api]
      entryPoint = "traefik"
      dashboard = true
    [metrics]
      [metrics.prometheus]
        buckets = [0.1,0.3,1.2,5.0]
metadata:
  name: traefik
  namespace: default
---
apiVersion: v1
kind: Secret
metadata:
  name: traefik-dashboard-ssl
  namespace: default
type: kubernetes.io/tls
data:
  #cat cert | base64 -w0
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVMekNDQXBlZ0F3SUJBZ0lSQUpBbTRXcDRzUHpTakx4ZVF6K2Y2Rkl3RFFZSktvWklodmNOQVFFTEJRQXcKWXpFZU1Cd0dBMVVFQ2hNVmJXdGpaWEowSUdSbGRtVnNiM0J0Wlc1MElFTkJNUnd3R2dZRFZRUUxEQk5xYjI1cQpiMjVBZEdoeVpXRmtjbWx3Y0dWeU1TTXdJUVlEVlFRRERCcHRhMk5sY25RZ2FtOXVhbTl1UUhSb2NtVmhaSEpwCmNIQmxjakFlRncweE9UQXhNakl4TURNNE1EVmFGdzB5T1RBeE1qSXhNRE00TURWYU1FY3hKekFsQmdOVkJBb1QKSG0xclkyVnlkQ0JrWlhabGJHOXdiV1Z1ZENCalpYSjBhV1pwWTJGMFpURWNNQm9HQTFVRUN3d1RhbTl1YW05dQpRSFJvY21WaFpISnBjSEJsY2pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS0szCkl5OVVET3ZrMmN5TXpRRVJaTStPNFZrZVNZc0t6d0g2QnlUcU04MHozaStMaXFzTEMyd2s3eExXdVJZVGJvcEUKQWhPWWJtZHE3YTNUUUJ6THRLemF3ME1UQmpUbzhETmoyb3ZSbm1meng1RFp6dHJrZjRKYlFUbjNlcVRqOTdoaAowQ0pDaVpKR3lkbnMzc2Y1RTdVVlZQaE1hR01vZzc1ME1YcGpPOVRmVzRIbW8rM3d2OEdzaUNIM1JuVnRPaUFMCm1NZVhzamFWam5KZXl3L01kekk2dU9PTkllOWN4WmdmdXBVWjhjamg4b1VqOW9YWkY4YzNBU3ZveHhDTzN0UlYKR0d3SGJQTHc5aENzbXFvSzc5MTgxS0Z0dFB3TXFZYjJsS3lkRng0U2pYdXJ1WkRORGsrbGVUa1k2Y0ZPVStrdAptOThoUTJKbUZZVGpCemNXZEQ4Q0F3RUFBYU42TUhnd0RnWURWUjBQQVFIL0JBUURBZ1dnTUJNR0ExVWRKUVFNCk1Bb0dDQ3NHQVFVRkJ3TUJNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVIOWM4ZVhtdjZOUUEKSjFjOVZDOU1TLzlYL3Ewd0lnWURWUjBSQkJzd0dZSVhkSEpoWldacGF5MWtZWE5vWW05aGNtUXViRzlqWVd3dwpEUVlKS29aSWh2Y05BUUVMQlFBRGdnR0JBQ0xEQ3d1N2R0bjEwTHhLSGJrZ0pncjVobkRlUTJwcFdwZzhQcGxOCnpWN3Y3cnJQYTJhck9EcTBPUzdZRW96WmM0ZHJrcmpnUEVMeUtab2krS0xjdFlXM0xVZTNHYmRadzFEZ0FLcGUKRWpVZFlXOWNQd0dzanhNQVdjNTFGUW9ZYnowTTEva1h3OHdSMVU3YkNhM0diMEVtT2p3bFpDS0JJNlBXbjFGQwpxem1DajJLRjdnMmVKVEV1MGh2TjVMRlJWZXBDNVJHeEZWbXRhWnBNb0o5eVp4ZENvWmxPdjAzQWg3WUx2dWlrCmlvZGl1cGliUEhzcnZaZEF6OVV6MGFCMTBsRytwWThUU1FPVjhNY1pza2NaS3BvRGx2NVlPWTlQNkR4TEF0ckkKVnNNZDlKT0ZqQk5lUGhJTVRBeFBTdXpHTUFWeERQMEFaRlZLdW5BMmtrT1hvRFAyd3loZlJGNkxOR1owdXRNMApSd3dMRlN0bklaQmM0RnVCa0JUdmk1S2ExWUNOSmlqMmVKYkwyc0tSSG1RT015dTZJS09senpOL0JCNURnOUxPCnpSYWREdzlSVXlhc05TYW9jTlFuN0tCajdPaTMzdUR2V3N3aHhlSjhWM0JTVGgxR2YzWTJJaVgvalE5bFBWVE0KYjlGRXdhbDB0WVlPS3E4SVQwSWZsYXIvT1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  #cat key | base64 -w0
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQ2l0eU12VkF6cjVObk0Kak0wQkVXVFBqdUZaSGttTENzOEIrZ2NrNmpQTk05NHZpNHFyQ3d0c0pPOFMxcmtXRTI2S1JBSVRtRzVuYXUydAowMEFjeTdTczJzTkRFd1kwNlBBelk5cUwwWjVuODhlUTJjN2E1SCtDVzBFNTkzcWs0L2U0WWRBaVFvbVNSc25aCjdON0grUk8xRlZUNFRHaGpLSU8rZERGNll6dlUzMXVCNXFQdDhML0JySWdoOTBaMWJUb2dDNWpIbDdJMmxZNXkKWHNzUHpIY3lPcmpqalNIdlhNV1lIN3FWR2ZISTRmS0ZJL2FGMlJmSE53RXI2TWNRanQ3VVZSaHNCMnp5OFBZUQpySnFxQ3UvZGZOU2hiYlQ4REttRzlwU3NuUmNlRW8xN3E3bVF6UTVQcFhrNUdPbkJUbFBwTFp2ZklVTmlaaFdFCjR3YzNGblEvQWdNQkFBRUNnZ0VBQWZudmQzZXg0SHViR1p6c01JTWhrbFBOOE9NcFNZTU1HSjRNMENuNER4bisKTE4ycEJZTFExTE51SS9CdnR4RHRXc2lRcmVSQUV3bDljWXNMVUU0NUY1Qmdwc1BvWTJRZzVyN2p2S2NESVlnWQplRzNzMFVQTk9Ld2JFclVxekMzb3FGaW55b0s4WVFaekZTNkhWaTUwU3RMRGdYQ01KQWd0OFhZLzA1aTQ5VkRzCk9sUWlLNVN2R00wa3dxNzZGejRkZkZaenphbzRneW8xV1phbWVoMFhlcGR6dGk3d3k0ZGxlS01KUmJLZnA4b1IKelBMUG01a01FejNMNlJUNEJVSWo2SUpTYWVud3BhcDY2dUZqTThoOUxUT0JvZEtkK01OQW9CVlZ5akZOMDdUNApOaDROenZqemZzejd4UjRiRmt0d1hqblRiT2xiczhoYVBUdGE4ZWRsd1FLQmdRREtKd2FEamZ3TVpCTVRpWGxHCjlSVDlsZDJXUWlzVitsSlpzdnVVeWVacTFlUVdGVWE1L1JUalExcXQzNUJvaFZmQVNidWs5bml3TkhldkgzZE8KMzJmeWF2MW04Q1Avbm1QS29RNHJHN0lDZDk2OWpqV2xObjRSTnZYTkp2ZlU2c3dzcEJGTElKQTdtS0J0akFjNwpOVUVyMGx4akFIODBhRzVaU3ZlWHVMTkhtUUtCZ1FET0R0d2JVaXh4UjZjYW1keng3RmEzUDVZcVhPVFZyZUZGCmlWdDQ2L3l4SURoT3FXYmxPUGtYRUd6MVVUcWc3aFNlbTdGM1lOcTRocEZJSGl1bHlZcmoxMElybm9JZS9CRjgKQ3kzWXFyK0lndnhmK1drREcxcXc5K1VwY1ZxanBONDBIRmVQampsMDRwcTdQZFVuVjhnZWpIYWtETEZNVzdnTQp3dzRjd2RDaGx3S0JnRWo3ei9rOUVNdTBjY0t5OW1zczNyZ3pIRDQ4ZzJ1NjVYSm5FVGVGc1QvUEd6cngwWWdpCm5DRDAxMDlCRU5UN2wxUGdDdlFpM0MzWnM0QXhYeFRGeWJTVzlnZnRHVUlYZ0RYTzhkdVVjeTg2OGRzRDlkQkIKSFVDLzAveU9YaG1yNzYwS1N3Z1JxS0VybUhnVWZ5UGNOVHhLQlhyazJnZ2t6L3BDKzZMMlZ4dTVBb0dBWVdQVwpsamNsZURqMGV2Y2ozVmZsdUdDZVdkRmorclpmRloyUkZUcjhTTDlBdmJVRlErdkVseWtWUm5Fbzg2enpJKy9VClZlYjZHV0xJd2J3NHh2ZlY1RS8ySDJXZ2ZJS0l4UWNIbVROQ3FZTzNRcWsvLzg3cTgxK0crU3B4TzQwTjFMVmMKa1NZWWMrMHlVck1yenBlSHB5Q2VablQxUzNEQ01ZM3pXcFlrUkdzQ2dZRUFxQXVkb0tkaDV1bkp4TCsvTC9CYgovNk5GL1hHQ1J1YkQxa3Z4RGlIanl3MWQ3WDFscUhhYU8wSFhvTXY5cjVIYXFWQkt4OHpSdHV4TTVUOG9IV0l0Cm1yang3YXFTSWZCSDlic0pmdzFKUi91VnRBaXp2dTJZRWUrMnM2UmgwdXUwK3p5K3NYQ3AzRGtOWjd3cHcxcEYKVEFpOXJhdkVrZHREajJ2SXNXeE1ZeU09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: traefik
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: traefik
      release: traefik
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: traefik
        release: traefik
    spec:
      containers:
      - args:
        - --configfile=/config/traefik.toml
        - --api
        - --insecureskipverify
        - --kubernetes
        - --web.metrics.prometheus
        - --logLevel="DEBUG"
        - --kubernetes.ingressendpoint
        image: traefik
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 80
          timeoutSeconds: 2
        name: traefik
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 8080
          name: dashboard
          protocol: TCP
        readinessProbe:
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 80
          timeoutSeconds: 2
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /ssl
          name: traefik-dashboard-ssl
#        - mountPath: /ssl/k8s
#          name: k8s-dashboard-certs
        - mountPath: /config
          name: config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 60
      volumes:
      - name: traefik-dashboard-ssl
        secret:
          defaultMode: 420
          secretName: traefik-dashboard-ssl
#      - name: k8s-dashboard-certs
#        secret:
#          defaultMode: 420
#          secretName: k8s-dashboard-secret
      - configMap:
          defaultMode: 420
          name: traefik
        name: config
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: traefik
  namespace: default
  annotations:
    # Enable PROXY protocol
    service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: '*'
    # Increase the ELB idle timeout to avoid issues with WebSockets or Server-Sent Events.
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: '3600'
    # external-dns
    external-dns.alpha.kubernetes.io/hostname: traefik.k8s-pactera-deg.com.
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app: traefik
    release: traefik
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-dashboard
  namespace: default
spec:
  ports:
  - name: dashboard
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: traefik
    release: traefik
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/target: traefik.k8s-pactera-deg.com.
    kubernetes.io/ingress.class: traefik
#    traefik.ingress.kubernetes.io/frontend-entry-points: http,https
#    traefik.ingress.kubernetes.io/redirect-entry-point: https
#    traefik.ingress.kubernetes.io/redirect-permanent: "true"
  name: traefik-dashboard
  namespace: default
spec:
  rules:
  - host: dashboard.pactera-deg.com
    http:
      paths:
      - backend:
          serviceName: traefik-dashboard
          servicePort: 8080
  tls:
  - secretName: traefik-dashboard-ssl

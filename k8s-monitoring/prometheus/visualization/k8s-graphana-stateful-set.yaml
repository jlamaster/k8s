  #Rook
#---
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: graphana-pv-claim
#  namespace: monitoring
#spec:
#  storageClassName: rook-ceph-block
#  accessModes:
#  - ReadWriteOnce
#  resources:
#    requests:
#      storage: 25Gi
#---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  serviceName: grafana
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 2000
        runAsNonRoot: true
      containers:
#      - image: grafana/grafana:4.2.0
      - image: grafana/grafana
        name: grafana
        imagePullPolicy: IfNotPresent
        # env:
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        env:
          # The following env variables set up basic auth twith the default admin user and admin password.
          - name: GF_AUTH_BASIC_ENABLED
            value: "true"
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                name: grafana
                key: admin-username
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: grafana
                key: admin-password
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ORG_ROLE
            value: Viewer
          - name: GF_LOG_LEVEL
            value: warn
          - name: GF_LOG_MODE
            value: console
          - name: GF_METRICS_ENABLED
            value: "true"
          # - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          #   value: Admin
          # does not really work, because of template variables in exported dashboards:
          # - name: GF_DASHBOARDS_JSON_ENABLED
          #   value: "true"
        readinessProbe:
          httpGet:
            path: /login
            port: 3000
          # initialDelaySeconds: 30
          # timeoutSeconds: 1
        volumeMounts:
        - name: grafana-persistent-storage
          mountPath: /var/lib/grafana
      volumes:
      - name: grafana-persistent-storage
        hostPath: 
          path: /C/Users/P0113789/Documents/hybris-default/kube/data/graphana
          type: DirectoryOrCreate
          #Rook
#     - name: grafana-persistent-storage
#       persistentVolumeClaim:
#         claimName: graphana-pv-claim
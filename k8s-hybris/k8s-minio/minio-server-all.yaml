apiVersion: batch/v1
kind: Job
metadata:
  name: minio-import-hybris-bucket
spec:
  template:
    metadata:
      name: minio-import-hybris-bucket
    spec:
      initContainers:
      - name: wait-for-minio
        image: giantswarm/tiny-tools
        args:
        - /bin/sh
        - -c
        - >
          set -x;
          while [ $(curl -sw '%{http_code}' "http://minio.local:9000" -o /dev/null) -ne 200]; do
            echo '.'
            sleep 15;
          done
      containers:
      - name: minio-inital-data-hybris
        image: minio/mc
        command:
        - /bin/sh
        - -c
        - '/usr/bin/mc config host add hybrisminio http://minio-service:9000  ;
          /usr/bin/mc mb hybrisminio/; /usr/bin/mc policy public hybrisminio/; exit
          0;'
      restartPolicy: Never

---
apiVersion: v1
kind: Secret
data:
  minio-access-key: YWRtaW4xMjM=
  minio-secret-key: bmltZGExMjM=
metadata:
  name: minio-secret
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: minio-ssl
type: kubernetes.io/tls
data:
  #cat cert | base64 -w0
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVOekNDQXArZ0F3SUJBZ0lRSllLczRDV2dEVzNSZ3EyVmFPeEUrekFOQmdrcWhraUc5dzBCQVFzRkFEQngKTVI0d0hBWURWUVFLRXhWdGEyTmxjblFnWkdWMlpXeHZjRzFsYm5RZ1EwRXhJekFoQmdOVkJBc01HbEF3TVRFegpOemc1WEZBd01URXpOemc1UUZBd01URXpOemc1TVNvd0tBWURWUVFERENGdGEyTmxjblFnVURBeE1UTTNPRGxjClVEQXhNVE0zT0RsQVVEQXhNVE0zT0Rrd0hoY05NVGt3TVRFeE1EVXdOelUxV2hjTk1qa3dNVEV4TURVd056VTEKV2pCT01TY3dKUVlEVlFRS0V4NXRhMk5sY25RZ1pHVjJaV3h2Y0cxbGJuUWdZMlZ5ZEdsbWFXTmhkR1V4SXpBaApCZ05WQkFzTUdsQXdNVEV6TnpnNVhGQXdNVEV6TnpnNVFGQXdNVEV6TnpnNU1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTJaVkRhRjNyQm02ajFuWmFMQUlONTFhZzkwaThNOWl5L3p4ZXo0M28Kdjdla2loankrTW9CaStxdEVvMlpLTktBUXMzN0ZENkpxZm04KzFibjBZMURIUzFJaTRpYjEwenU5VzY3b0Z5RwpOaE0vQkJobktlZXJ1YUp1Wm9yMWl5dFRCanZMMkFLdXFuMTU0TUtBdlBvc2s5WlhXbTFjSUpUQVQ5WEt3VVlaClN2emVmWEpjUHVtNWtFbmRpNlhhNUZZMGJraW9HU09pRkdhclBrUTJ3WEUwMEVWZktFdnIvb3hLMWF1VWQ1QnEKR3pzMnpXVVFTaG1naXBTWDlqV0FNVDlYQUM3RVhoQ3p1OERzemxFbXAvc3dvUExhREJzVEpueXhtWWhlcmc5dQpFbEFuSVlia3VmNG04ZFl1TFBHNXBNb2NCQTZ4Z2FDQzNoUWNlaTAzTVB6QUx3SURBUUFCbzI0d2JEQU9CZ05WCkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3REFZRFZSMFRBUUgvQkFJd0FEQWYKQmdOVkhTTUVHREFXZ0JSTEZMQi9YS09ta3RPS2lHVVZoZ1BFT0ZEV2RqQVdCZ05WSFJFRUR6QU5nZ3R0YVc1cApieTVzYjJOaGJEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FZRUFSKzNMSEx0K1VBM1pqeGc0SVFPWmJrcmF6MmNjCmlKUzVUMFFxNGlSc3lTWVl3VEFiNVRmcks4OVZGcnI1UTJWVW1adm8zb2FEWXYwbW13bHBENENqSTFqc2ZXaGMKL3MzUDJrU3kxQTRDak0rRFRSbGQ1KzZQUHZ1SlVFMWgybnpCWUt3ZDVoclBCaXo0SVF4TWFhRWxWSkdEcnFhaAp6eFNhMk5RenBWZkN5S3NhdFFzQXhBa3IrOVZoWFpkcG41MmZoU0VlMzc0NEN3Q3MwZlFKbG5TVjNpUGEzY1o0Cll1WVcxTHRHeko3dVVXVjJjUk01UDlYc3pLMkY1UElRK2NaZzJ0aUJ0cnNYSTIvNmVYdVlCOXVMRzZYV2RIUFAKc1Bselk0SXpMRWJVaHNXU01QdHQybFdUY2I4REt2Ri9sVktRRzdKSG5sc1Q0Q3A0d2NzbUR6OHdzUGtBdFpMSgpsZ1l3bkVITFh5U0EraFFETEdyWS8vMEZJTUp0UFZGcFhjVjk4ZzZ6UGlCMmtpOHVMS29ENmpha00ySWJzOGxYCmJ4bmR1dmc1T0RRaDdhU2UzTDA2RjdLSkNFTDloZHFqTzVhOEk2Y2M4Rmt3bGI1alRudy9DaUl1NnpuQTVFbloKSExwLzgzYVpFc3dKWnRYNVBwREc0L2o3SGxQc2RoNnV5bVNMCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    #cat key | base64 -w0
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2d0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktrd2dnU2xBZ0VBQW9JQkFRRFpsVU5vWGVzR2JxUFcKZGxvc0FnM25WcUQzU0x3ejJMTC9QRjdQamVpL3Q2U0tHUEw0eWdHTDZxMFNqWmtvMG9CQ3pmc1VQb21wK2J6NwpWdWZSalVNZExVaUxpSnZYVE83MWJydWdYSVkyRXo4RUdHY3A1NnU1b201bWl2V0xLMU1HTzh2WUFxNnFmWG5nCndvQzgraXlUMWxkYWJWd2dsTUJQMWNyQlJobEsvTjU5Y2x3KzZibVFTZDJMcGRya1ZqUnVTS2daSTZJVVpxcysKUkRiQmNUVFFSVjhvUyt2K2pFclZxNVIza0dvYk96Yk5aUkJLR2FDS2xKZjJOWUF4UDFjQUxzUmVFTE83d096TwpVU2FuK3pDZzh0b01HeE1tZkxHWmlGNnVEMjRTVUNjaGh1UzUvaWJ4MWk0czhibWt5aHdFRHJHQm9JTGVGQng2CkxUY3cvTUF2QWdNQkFBRUNnZ0VCQU5oY2ZoQTlQQ1ZFUmZWUDhUREx4aW1oMGlTMEZqbjBKV0o3Rk1pTms4RjUKQ3N3c0xRaEtUNmxqYmtFQnZ5aUIwZnNjT3EwUjF2RElIeTFMYU8vTzZjc01xWlBlL3lEa0pzYTJHeXRHZGtzMQpiamRUVU5xeHZlaTFaZFRnSDNVSld1RGErMFBNdndWWUNxYitvdWZJV2lXVVFYN3hPbWhIb3NpQWpzTU1Rc0IxCnlDRDFEZExiUjZ2VFZZcStxWEJJbzZMZTJpaWVFZWpvc1U0dVFEMWlHeGZBOGdQWDR4YU9oenNONjBSTjdSTUgKMTJ2SjU4SzlCajhVdTdISXQrWHJaWGN4bmEyZjJyYytVUVdkV2JBUng2cTdSbkM3d3FwYm1kOWlMZmZHQnZtUwpueEt4QXN0R2tHMk1qc0tnamtkZ3NEczdMSExTcWFsTW9LNFh2Z3BSTDFFQ2dZRUE3WnM4RWpBU3g3azF1S3V0Cm52V3o5MmUyYVRvQVRQVytEZ3dXT1FPRkphcys5Tng5ME0xdVhBYW9xcEN1N0FIUjNBMG5ibWZSWnY1MVlWR3gKTWtDL0hLQlRocXhlajdwWUQyT1BoVTRvUFd2cjhSaXMwZ2Fncnl4NFh5dmpUMExzNGdsZ1dBWEZoOHBXR1JTYwpXR2RjSE43aHQyRGV2RmVmN0ZqTTk1NnVxS2NDZ1lFQTZtMDNZZGdIUTVVb291S0p0azRmRFFsRG5oODMrQzF3Ck14czNnL201Y2h3S2YyRTk3NVFtU2dBcE9ZREY2ekRaQ1dmK3pFRmh4akNrRmxxMkZaOGdSbTZOT2ZzaDR0enMKaHViTUZRZytoN0pqcjhoM2RleHZCUEt4aExZdHJreCtCYzBaNEF4cXN6NHZubThKWEZwOXNRbEhsSll4QklSYwo1c1I3cDdxUWxUa0NnWUJ6YkNGMlJGd2JJV0Z6WUJKclViZ215djdWaHhOMlR6b1A0TmM2d3ZiL0lYem52ZVJ3CmRoclNJWG4xd1dyM3dycUxSdWlNdlduL3VrU1REZmdpRFVuSlFpalJGeEtvaDBFWDJLbHpmRkFYNWtFclVXMUMKYVczTktyRWVxbGMxdmJFTTdMa2NpVkUzY1piNWdBV2kvRExHNDQ2S1lraFEvYy8ySS8wTm5Nd0RxUUtCZ1FDdgp1V3E0VjEwcWxkYStNcDRVSC84Nm9HVWxWRFY2UFdWTGllMVZhbzVPTVNMVlZTaytPNGx3RXlyVHhlbVdZU2x2CjJacXZ0WnI3RzE4RXVyNmUrb2NSQkxHc2NzbDE2ekVKOWx1b3NHTmZDS09kRXVJcGJTL1RQN0U5eitueUs3aVQKMUtpK3Y5QUR5R3Vka1pJc3ZsQlZzcVVMaG9INzV0UlV6NWY1cE9uWVVRS0JnUUNXY0hsbDVTVzUrTjYrc0lwbQpTcmRKWjZ3cWgwQmQvakxVeEtXdk9nRktmcGtVWmF2eStjZzA0anBrSUYwUVhhcWFsTGppV3ZoaC9jS0Q2YmJWCmo1cG9nVXdjSzBnUU1KU1pNTE5rTWcxNXJ3ZEdramtEZW43TXJ2L01SR1hkS3JUTjlHNTkyMnBKci8wbWV5ZS8KYkJsdVRxTjZ2VGlaZ3orSDNIRlU1Y3lkTmc9PQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  # This name uniquely identifies the StatefulSet
  name: minio
spec:
  serviceName: minio
  replicas: 4
  selector:
    matchLabels:
      app: minio # has to match .spec.template.metadata.labels
  template:
    metadata:
      labels:
        app: minio # has to match .spec.selector.matchLabels
    spec:
      containers:
      - name: minio
        env:
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: minio-access-key
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: minio-secret-key      
#        - name: MINIO_ACCESS_KEY
#          value: "minio"
#        - name: MINIO_SECRET_KEY
#          value: "minio123"
        image: minio/minio:latest
        args:
        - server
        - http://minio-0.minio.default.svc.cluster.local/data
        - http://minio-1.minio.default.svc.cluster.local/data
        - http://minio-2.minio.default.svc.cluster.local/data
        - http://minio-3.minio.default.svc.cluster.local/data
        ports:
        - containerPort: 9000
        # These volume mounts are persistent. Each pod in the PetSet
        # gets a volume mounted based on this field.
        volumeMounts:
        - name: data
          mountPath: /data
        # Liveness probe detects situations where Minio server instance
        # is not working properly and needs restart. Kubernetes automatically
        # restarts the pods if liveness checks fail.
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above.
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  labels:
    app: minio
spec:
  clusterIP: None
  ports:
    - port: 9000
      name: minio
  selector:
    app: minio
---
apiVersion: v1
kind: Service
metadata:
#  annotations:
#    traefik.backend: minio-server
#    traefik.docker.network: b2c-minio_hybris
#    traefik.enable: "true"
#    traefik.frontend.headers.SSLRedirect: "true"
#    traefik.frontend.headers.SSLTemporaryRedirect: "true"
#    traefik.frontend.redirect.entryPoint: https
#    traefik.frontend.rule: Host:minio.local
#    traefik.port: "9000"
#    traefik.protocol: http
  labels:
    app: minio
  name: minio-service
spec:
  type: ClusterIP
  ports:
  - name: minio-service
    port: 9000
    targetPort: 9000
    protocol: TCP
  selector:
    app: minio
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
#    traefik.ingress.kubernetes.io/frontend-entry-points: http,https
#    traefik.ingress.kubernetes.io/redirect-entry-point: https
#    traefik.ingress.kubernetes.io/redirect-permanent: "true"
  name: minio-dashboard
spec:
  rules:
  - host: minio.local
    http:
      paths:
      - path: /
        backend:
          serviceName: minio-service
          servicePort: 9000
  tls:
  - secretName: minio-ssl